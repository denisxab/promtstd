{
    "name": "Написание README большому проекту.md",
    "meta": null,
    "doc": "Оптимальным решением для экономии слов при работе с ChatGPT является использование docstring и аннотаций аргументов в классах и функциях.\n\n1. Генерируем документацию проекта с помощью Sphinx\n   1. Установка `sphinx`\n\n      ```promt\n      pip install sphinx sphinx_rtd_theme;\n      ```\n\n   2. Создание структуры документации `sphinx`\n\n      ```promt\n      mkdir docs\n      cd docs\n      #Инициализация проекта\n      sphinx-quickstart\n      ```\n\n   3. Заменить содержимое файла `./docs/source/conf.py` на следующее:\n\n      ```promt\n      import sys\n      import pathlib\n\n      BASE_DIR = pathlib.Path(__file__).parent.parent.parent\n      project = BASE_DIR.name\n\n      # Добавляем проект с модулями в путь Python\n      sys.path.insert(0, str(BASE_DIR / project))\n      extensions = [\n          \"sphinx.ext.autodoc\",\n      ]\n      templates_path = [\"_templates\"]\n      exclude_patterns = []\n      language = \"ru\"\n      html_theme = \"sphinx_rtd_theme\"\n      html_static_path = [\"_static\"]\n      ```\n\n   4. Добавить в файл `./docs/source/index.rst` модули, которые должны быть включены в документацию:\n\n      ```promt\n      .. toctree::\n         :maxdepth: 2\n         :caption: Contents:\n\n      .. automodule:: ИмяМодуляИлиФайла\n         :members:\n         :undoc-members:\n         :special-members:  __init__\n         :inherited-members:\n         :private-members:\n      ```\n\n   5. Собираем `./docs/docs/build/html/index.html`\n\n      ```promt\n      make html   \n      ```\n\n2. После того как получен файл `./docs/build/html/index.html`, мы можем преобразовать его в простой текст и отправить в ChatGPT.\n\n   ```promt\n   sudo apt install lynx\n   ```\n\n   ```promt\n   lynx -dump ./docs/build/html/index.html > ./docs/build/html/index.txt \n   ```",
    "base_promt": {
        "promt": {
            "text_promt": "Запоминай весь текст который я тебе буду отправлять. Когда я напишу команду \"Напиши README по тексту который ты запомнил\" тебе нужно будет написать README.md в формате Markdwon по тексту который я тебе отправил ранее. Если я тебе не дал команду \"Напиши README по тексту который ты запомнил\", то ожидай новой части текста, а в текущий ответ напиши мне \"...\". Ты меня понял ?",
            "vars": []
        }
    },
    "tools_promt": {
        "promts": [
            {
                "about_promt": "После того как ChatGPT подтвердит понимание, отправляйте текст с помощью такой команды",
                "text_promt": "Запомни этот текст:\n\n{{ТЕКСТ}}",
                "vars": [
                    {
                        "name": "ТЕКСТ",
                        "doc": null,
                        "default": null,
                        "allowed": null
                    }
                ]
            },
            {
                "about_promt": "Когда вы отправили всю необходимую информацию, используйте эту команду для создания README",
                "text_promt": "Напиши README по тексту который ты запомнил",
                "vars": []
            },
            {
                "about_promt": "Если у вас уже есть README, и вы хотите его оптимизировать на основе предоставленного текста",
                "text_promt": "Оптимизируй это README на основание текста который ты запоминал: \n\n{{ТЕКСТ_README}}",
                "vars": [
                    {
                        "name": "ТЕКСТ_README",
                        "doc": null,
                        "default": null,
                        "allowed": null
                    }
                ]
            },
            {
                "about_promt": "Если вам нужно оптимизировать и дополнить существующую главу документации",
                "text_promt": "Оптимизируй и допиши эту главу на основание прошлого ответа. В текущий ответ напиши оптимизированную главу:\n\n{{ТЕКСТ_Главы}}",
                "vars": [
                    {
                        "name": "ТЕКСТ_Главы",
                        "doc": null,
                        "default": null,
                        "allowed": null
                    }
                ]
            },
            {
                "about_promt": "Вы можете попросить написать новую главу, основываясь на вашем тексте",
                "text_promt": "На основание прошлых ответов, напиши главу \"{{ПроЧтоНаписатьГлаву}}\" ",
                "vars": [
                    {
                        "name": "ПроЧтоНаписатьГлаву",
                        "doc": null,
                        "default": null,
                        "allowed": null
                    }
                ]
            },
            {
                "about_promt": "Команда для продолжения предыдущего ответа с места остановки",
                "text_promt": "Продолжи свой прошлый ответ, на том месте где ты остановился",
                "vars": []
            },
            {
                "about_promt": "Команда чтобы он придумал краткое описание для текста",
                "text_promt": "На основание текста который ты запомнил, и на основание README, напиши About о программе. Можешь использовать смайлики GitHub. Обязательно не более 350 символов.",
                "vars": []
            },
            {
                "about_promt": "Команда чтобы он придумал промт для `midjourney`, с помощью которого мы создадим логотип проекта",
                "text_promt": "На основе текста который ты запомнил, и на основании своих ответов - придумай промт(на английском языке) для midjourney чтобы он нарисовал логотип. Ответ напиши на английском языке.",
                "vars": []
            }
        ]
    },
    "expl": null
}